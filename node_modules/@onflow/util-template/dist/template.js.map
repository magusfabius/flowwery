{"version":3,"file":"template.js","sources":["../../../node_modules/queue-microtask/index.js","../../util-actor/src/mailbox/index.js","../../config/src/config.js","../../util-logger/src/util-logger.js","../src/template.js"],"sourcesContent":["let promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst GET_ALL = \"GET_ALL_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst CLEAR = \"CLEAR_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [GET_ALL]: (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [CLEAR]: (ctx, letter) => {\n    let keys = Object.keys(ctx.all())\n    for (let key of keys) ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\nasync function first(wants = [], fallback) {\n  if (!wants.length) return fallback\n  const [head, ...rest] = wants\n  const ret = await get(head)\n  if (ret == null) return first(rest, fallback)\n  return ret\n}\n\nfunction all() {\n  return send(NAME, GET_ALL, null, {expectReply: true, timeout: 10})\n}\n\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\nexport function clearConfig() {\n  return send(NAME, CLEAR)\n}\n\nfunction config(values) {\n  if (values != null && typeof values === \"object\") {\n    Object.keys(values).map(d => put(d, values[d]))\n  }\n\n  return {\n    put,\n    get,\n    all,\n    first,\n    update,\n    delete: _delete,\n    where,\n    subscribe,\n    overload,\n  }\n}\n\nconfig.put = put\nconfig.get = get\nconfig.all = all\nconfig.first = first\nconfig.update = update\nconfig.delete = _delete\nconfig.where = where\nconfig.subscribe = subscribe\nconfig.overload = overload\n\nexport {config}\n\nconst noop = v => v\nfunction overload(opts = {}, callback = noop) {\n  return new Promise(async (resolve, reject) => {\n    const oldConfig = await all()\n    try {\n      config(opts)\n      var result = await callback(await all())\n      await clearConfig()\n      await config(oldConfig)\n      resolve(result)\n    } catch (error) {\n      await clearConfig()\n      await config(oldConfig)\n      reject(error)\n    }\n  })\n}\n","import {config} from \"@onflow/config\"\n\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n","import {log} from \"@onflow/util-logger\"\n\nexport function interleave(a = [], b = [], c = []) {\n  if (!a.length && !b.length) return c\n  if (!a.length) return c\n  if (!b.length) return [...c, a[0]]\n\n  const [aHead, ...aRest] = a\n  const [bHead, ...bRest] = b\n\n  if (aHead !== undefined) c.push(aHead)\n  if (bHead !== undefined) c.push(bHead)\n\n  return interleave(aRest, bRest, c)\n}\n\nfunction recApply(d) {\n  return function (arg1) {\n    if (typeof arg1 === \"function\") {\n      log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject: \"Interopolation of functions into template literals\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n      })\n      return recApply(d)(arg1(d))\n    }\n    return String(arg1)\n  }\n}\n\nexport function template(head, ...rest) {\n  if (typeof head === \"string\") return () => head\n  if (Array.isArray(head)) {\n    return d =>\n      interleave(head, rest.map(recApply(d)))\n        .join(\"\")\n        .trim()\n  }\n  return head\n}\n"],"names":["promise","queueMicrotask_1","queueMicrotask","cb","Promise","resolve","then","err","setTimeout","next","queue","mailbox","receive","msg","NAME","PUT","GET","GET_ALL","UPDATE","DELETE","CLEAR","WHERE","HANDLERS","_defineProperty","key","value","ctx","Error","letter","reply","fallback","update","Object","pattern","unsubscribe","config","spawn","send","expectReply","timeout","first","_asyncToGenerator","_regeneratorRuntime","wants","_toArray","head","rest","ret","get","fn","identity","length","put","values","all","subscribe","noop","opts","callback","clearConfig","LEVELS","debug","info","error","title","message","level","always","configLoggerLevel","loggerMessageArgs","buildLoggerMessageArgs","_toConsumableArray","log","subject","warn","string","logMessage","pkg","transition","deprecate","interleave","a","b","c","aHead","aRest","bHead","bRest","undefined","push","recApply","d","arg1","String","template","Array","isArray","map","join","trim"],"mappings":"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"}