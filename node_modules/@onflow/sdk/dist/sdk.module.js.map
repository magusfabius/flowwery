{"version":3,"file":"sdk.module.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/voucher.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve-voucher-intercept.js","../src/resolve/resolve-compute-limit.js","../src/resolve/resolve.js","../src/build/build-invariant.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/account/account.js","../src/block/block.js","../src/build/build-authorizations.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-voucher-intercept.js","../src/resolve/resolve-proposer-sequence-number.js","../src/test-utils/mock-send.js","../src/test-utils/authz-fn.js","../src/test-utils/run.js","../src/VERSION.js","../src/sdk.js"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null,\n  \"resolveArgument\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":[],\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst prepAccountKeyId = acct => {\n  if (acct.keyId == null) return acct\n\n  invariant(!isNaN(parseInt(acct.keyId)), \"account.keyId must be an integer\")\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId),\n  }\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  if (acct.authorization && isFn(acct.authorization))\n    acct = {resolve: acct.authorization}\n  if (!acct.authorization && isFn(acct)) acct = {resolve: acct}\n\n  const resolve = acct.resolve\n  if (resolve)\n    acct.resolve = (acct, ...rest) =>\n      [resolve, prepAccountKeyId].reduce(\n        async (d, fn) => fn(await d, ...rest),\n        acct\n      )\n  acct = prepAccountKeyId(acct)\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else if (role === PAYER) {\n    ix.payer.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  ix.arguments[tempId].resolveArgument = isFn(arg.resolveArgument)\n    ? arg.resolveArgument.bind(arg)\n    : arg.resolveArgument\n\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    },\n  ])\n}\n","import {log, LEVELS} from \"@onflow/util-logger\"\n\nconst latestBlockDeprecationNotice = () => {\n  log.deprecate({\n    pkg: \"@onflow/decode\",\n    subject:\n      \"Operating upon data of the latestBlock field of the response object\",\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\",\n  })\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async i => i\n\nconst decodeVoid = async () => null\n\nconst decodeType = async type => {\n  return type.staticType\n}\n\nconst decodePath = async path => {\n  return {\n    domain: path.domain,\n    identifier: path.identifier,\n  }\n}\n\nconst decodeCapability = async cap => {\n  return {\n    path: cap.path,\n    address: cap.address,\n    borrowType: cap.borrowType,\n  }\n}\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async v => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      v =>\n        new Promise(async res =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[await recurseDecode(v.key, decoders, [...stack, v.key])] =\n      await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeImplicit,\n  Int: decodeImplicit,\n  UInt8: decodeImplicit,\n  Int8: decodeImplicit,\n  UInt16: decodeImplicit,\n  Int16: decodeImplicit,\n  UInt32: decodeImplicit,\n  Int32: decodeImplicit,\n  UInt64: decodeImplicit,\n  Int64: decodeImplicit,\n  UInt128: decodeImplicit,\n  Int128: decodeImplicit,\n  UInt256: decodeImplicit,\n  Int256: decodeImplicit,\n  Word8: decodeImplicit,\n  Word16: decodeImplicit,\n  Word32: decodeImplicit,\n  Word64: decodeImplicit,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n  Enum: decodeComposite,\n  Type: decodeType,\n  Path: decodePath,\n  Capability: decodeCapability,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find(decoder => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  // Filter out all default decoders which are overridden by a custom decoder regex\n  const filteredDecoders = Object.keys(defaultDecoders)\n    .filter(\n      decoder =>\n        !Object.keys(customDecoders).find(customDecoder =>\n          new RegExp(customDecoder).test(decoder)\n        )\n    )\n    .reduce((decoders, decoderKey) => {\n      decoders[decoderKey] = defaultDecoders[decoderKey]\n      return decoders\n    }, customDecoders)\n\n  const decoders = {\n    ...filteredDecoders,\n    ...customDecoders,\n  }\n  return recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  if (response.encodedData) {\n    return decode(response.encodedData, customDecoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, customDecoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, customDecoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  }\n\n  return null\n}\n","import {\n  isTransaction,\n  Ok,\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nasync function getRefId(opts) {\n  const node = await config().get(\"accessNode.api\")\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], defaultSend)\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await sendFn(ix, {config, response, Buffer, ix: ixModule}, {node})\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce((cadence, [key, value]) => {\n          const regex = new RegExp(\"(\\\\b\" + key + \"\\\\b)\", \"g\")\n          return cadence.replace(regex, value)\n        }, cadence)\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nasync function handleArgResolution(arg, depth = 3) {\n  invariant(\n    depth > 0,\n    `Argument Resolve Recursion Limit Exceeded for Arg: ${arg.tempId}`\n  )\n\n  if (isFn(arg.resolveArgument)) {\n    const resolvedArg = await arg.resolveArgument()\n    return handleArgResolution(resolvedArg, depth - 1)\n  } else {\n    return arg\n  }\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      const res = await handleArgResolution(arg)\n      ix.arguments[id].asArgument = cast(res)\n    }\n  }\n\n  return ix\n}\n","import {SHA3} from \"sha3\"\nimport {encode, Buffer} from \"@onflow/rlp\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport const encodeTransactionPayload = tx =>\n  prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx =>\n  prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\nexport const encodeTxIdFromVoucher = voucher =>\n  sha3_256(rlpEncode(prepareVoucher(voucher)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(\n  Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"),\n  32\n).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst sha3_256 = msg => {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(msg, \"hex\"))\n  return sha.digest().toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(sansPrefix(tx.proposalKey.address)),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(sansPrefix(tx.payer)),\n    tx.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer))),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst prepareVoucher = voucher => {\n  validateVoucher(voucher)\n\n  const signers = collectSigners(voucher)\n\n  const prepareSigs = sigs => {\n    return sigs\n      .map(({address, keyId, sig}) => {\n        return {signerIndex: signers.get(address), keyId, sig}\n      })\n      .sort((a, b) => {\n        if (a.signerIndex > b.signerIndex) return 1\n        if (a.signerIndex < b.signerIndex) return -1\n        if (a.keyId > b.keyId) return 1\n        if (a.keyId < b.keyId) return -1\n      })\n      .map(sig => {\n        return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n      })\n  }\n\n  return [\n    [\n      scriptBuffer(voucher.cadence),\n      voucher.arguments.map(argumentToString),\n      blockBuffer(voucher.refBlock),\n      voucher.computeLimit,\n      addressBuffer(sansPrefix(voucher.proposalKey.address)),\n      voucher.proposalKey.keyId,\n      voucher.proposalKey.sequenceNum,\n      addressBuffer(sansPrefix(voucher.payer)),\n      voucher.authorizers.map(authorizer =>\n        addressBuffer(sansPrefix(authorizer))\n      ),\n    ],\n    prepareSigs(voucher.payloadSigs),\n    prepareSigs(voucher.envelopeSigs),\n  ]\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  payloadSigsFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst validateVoucher = voucher => {\n  payloadFields.forEach(field => checkField(voucher, field))\n  proposalKeyFields.forEach(field =>\n    checkField(voucher.proposalKey, field, \"proposalKey\")\n  )\n  payloadSigsFields.forEach(field => checkField(voucher, field))\n  voucher.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n  envelopeSigsFields.forEach(field => checkField(voucher, field))\n  voucher.envelopeSigs.forEach((sig, index) => {\n    envelopeSigFields.forEach(field =>\n      checkField(sig, field, \"envelopeSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst payloadSigsFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst envelopeSigsFields = [{name: \"envelopeSigs\", check: isArray}]\n\nconst envelopeSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {withPrefix} from \"@onflow/util-address\"\nimport {encodeTxIdFromVoucher} from \"../encode/encode.js\"\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  if (Array.isArray(ix.payer)) {\n    ix.payer.forEach(p => inside.delete(p))\n  } else {\n    inside.delete(ix.payer)\n  }\n  return Array.from(inside)\n}\n\nexport function findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set(Array.isArray(ix.payer) ? ix.payer : [ix.payer])\n  return Array.from(outside)\n}\n\nexport const createSignableVoucher = ix => {\n  const buildAuthorizers = () => {\n    const authorizations = ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, [])\n    return authorizations[0] ? authorizations : []\n  }\n\n  const buildInsideSigners = () =>\n    findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const buildOutsideSigners = () =>\n    findOutsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(\n      ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n    ),\n    authorizers: buildAuthorizers(),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners(),\n  }\n}\n\nexport const voucherToTxId = voucher => {\n  return encodeTxIdFromVoucher(voucher)\n}\n","import {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log} from \"@onflow/util-logger\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\nconst isFn = v => typeof v === \"function\"\n\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    let resolve = ax.resolve\n    ax.resolve = null\n    var old = last || ax\n    if (isFn(resolve)) ax = await resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      if (ax.addr) {\n        ax.addr = sansPrefix(ax.addr)\n      }\n      if (ax.addr != null && ax.keyId != null) {\n        ax.tempId = idof(ax)\n      }\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer) {\n        if (Array.isArray(ix.payer)) {\n          ix.payer = Array.from(\n            new Set(\n              [...ix.payer, ax.tempId].map(d =>\n                d === old.tempId ? ax.tempId : d\n              )\n            )\n          )\n        } else {\n          ix.payer = Array.from(\n            new Set(\n              [ix.payer, ax.tempId].map(d => (d === old.tempId ? ax.tempId : d))\n            )\n          )\n        }\n        if (ix.payer.length > 1) {\n          // remove payer dups based on addr and keyId\n          const dupList = []\n          const payerAccts = []\n          ix.payer = ix.payer.reduce((g, tempId) => {\n            const {addr} = ix.accounts[tempId]\n            const key = idof(ix.accounts[tempId])\n            payerAccts.push(addr)\n            if (dupList.includes(key)) return g\n            dupList.push(key)\n            return [...g, tempId]\n          }, [])\n          const multiAccts = Array.from(new Set(payerAccts))\n          if (multiAccts.length > 1) {\n            throw new Error(\"Payer can not be different accounts\")\n          }\n        }\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = Array.from(new Set([...authorizations, ax.tempId]))\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    if (!Array.isArray(ix.payer)) {\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          '\"ix.payer\" must be an array. Support for ix.payer as a singular',\n        message: \"See changelog for more info.\",\n      })\n    }\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\nimport {\n  createSignableVoucher,\n  findInsideSigners,\n  findOutsideSigners,\n} from \"./voucher.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  const payerAddress = sansPrefix(\n    (Array.isArray(ix.payer) ? ix.accounts[ix.payer[0]] : ix.accounts[ix.payer])\n      .addr\n  )\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: payerAddress,\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {get, pipe, Ok, Bad} from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, \"ix.validators\", [])\n  return pipe(\n    ix,\n    validators.map(cb => ix => cb(ix, {Ok, Bad}))\n  )\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {get, isFn} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\n\nexport async function resolveVoucherIntercept(ix) {\n  const fn = get(ix, \"ix.voucher-intercept\")\n  if (isFn(fn)) {\n    await fn(createSignableVoucher(ix))\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\n\nconst DEFAULT_COMPUTE_LIMIT = 100\n\nexport async function resolveComputeLimit(ix) {\n  if (isTransaction(ix)) {\n    ix.message.computeLimit =\n      ix.message.computeLimit || (await config.get(\"fcl.limit\"))\n\n    if (!ix.message.computeLimit) {\n      logger.log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject:\n          \"The built-in default compute limit (DEFAULT_COMPUTE_LIMIT=10)\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0009-deprecate-default-compute-limit\",\n      })\n      ix.message.computeLimit = DEFAULT_COMPUTE_LIMIT\n    }\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\nimport {resolveVoucherIntercept} from \"./resolve-voucher-intercept.js\"\nimport {resolveComputeLimit} from \"./resolve-compute-limit.js\"\n\nconst noop = v => v\nconst debug =\n  (key, fn = noop) =>\n  async ix => {\n    const take = (obj, keys = []) => {\n      if (typeof keys === \"string\") keys = keys.split(\" \")\n      keys.reduce((acc, key) => ({...acc, [key]: obj[key]}), {})\n    }\n\n    const accts = ix =>\n      [\n        \"\\nAccounts:\",\n        {\n          proposer: ix.proposer,\n          authorizations: ix.authorizations,\n          payer: ix.payer,\n        },\n        \"\\n\\nDetails:\",\n        ix.accounts,\n      ].filter(Boolean)\n\n    const log = (...msg) => {\n      console.log(`debug[${key}] ---\\n`, ...msg, \"\\n\\n\\n---\")\n    }\n\n    if (await config.get(`debug.${key}`)) await fn(ix, log, accts)\n    return ix\n  }\n\nexport const resolve = pipe([\n  resolveCadence,\n  debug(\"cadence\", (ix, log) => log(ix.message.cadence)),\n  resolveComputeLimit,\n  debug(\"compute limit\", (ix, log) => log(ix.message.computeLimit)),\n  resolveArguments,\n  debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)),\n  resolveAccounts,\n  debug(\"accounts\", (ix, log, accts) => log(...accts(ix))),\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  debug(\"signatures\", (ix, log, accts) => log(...accts(ix))),\n  resolveFinalNormalization,\n  resolveValidators,\n  resolveVoucherIntercept,\n  debug(\"resolved\", (ix, log) => log(ix)),\n])\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const node = await config().get(\"accessNode.api\")\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    ix.message.refBlock = (\n      await sendFn(\n        build([getBlock()]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      ).then(decode)\n    ).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      const node = await config().get(\"accessNode.api\")\n      const sendFn = await config.first(\n        [\"sdk.transport\", \"sdk.send\"],\n        defaultSend\n      )\n\n      invariant(\n        sendFn,\n        `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n      )\n\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(\n        await build([getAccount(acct.addr)]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      )\n        .then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}\n","import {Ok, Bad} from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, {Ok, Bad}) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport {interaction, pipe} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {invariant} from \"../build/build-invariant.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFn = await config.first(\n    [\"sdk.transport\", \"sdk.send\"],\n    opts.send || defaultSend\n  )\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  const resolveFn = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFn(\n    await resolveFn(args),\n    {config, response, ix: ixModule, Buffer},\n    opts\n  )\n}\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = voucher => {\n  // Payload Signers Are: (authorizers + proposer) - payer\n  let payload = new Set(voucher.authorizers)\n  payload.add(voucher.proposalKey.address)\n  payload.delete(voucher.payer)\n  return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = voucher => {\n  // Envelope Signers Are: (payer)\n  let envelope = new Set([voucher.payer])\n  return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n  constructor(signerAddress) {\n    const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n    super(msg)\n    this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n  }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n  let payloadSigners = findPayloadSigners(signable.voucher)\n  let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n  const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n  const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n  if (!isPayloadSigner && !isEnvelopeSigner) {\n    throw new UnableToDetermineMessageEncodingTypeForSignerAddress(\n      signerAddress\n    )\n  }\n\n  const message = {\n    cadence: signable.voucher.cadence,\n    refBlock: signable.voucher.refBlock,\n    computeLimit: signable.voucher.computeLimit,\n    arguments: signable.voucher.arguments,\n    proposalKey: {\n      ...signable.voucher.proposalKey,\n      address: sansPrefix(signable.voucher.proposalKey.address),\n    },\n    payer: sansPrefix(signable.voucher.payer),\n    authorizers: signable.voucher.authorizers.map(sansPrefix),\n    payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n      ...ps,\n      address: sansPrefix(ps.address),\n    })),\n  }\n\n  return isPayloadSigner\n    ? encodeTransactionPayload(message)\n    : encodeTransactionEnvelope(message)\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n  return update(\"ix.validators\", validators =>\n    Array.isArray(validators) ? validators.push(cb) : [cb]\n  )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix))\n        return Bad(\n          ix,\n          \"Unable to specify a block id with a Get Account interaction.\"\n        )\n      if (typeof ix.block.isSealed === \"boolean\")\n        return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height)\n        return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, {height, id} = {}, opts) {\n  invariant(\n    !(id && height),\n    `Method: account -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get account by ID\n  if (id) return send([getAccount(address), atBlockId(id)], opts).then(decode)\n\n  // Get account by height\n  if (height)\n    return send([getAccount(address), atBlockHeight(height)], opts).then(decode)\n\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nexport function block({sealed = false, id, height} = {}, opts = {}) {\n  invariant(\n    !((sealed && id) || (sealed && height)),\n    `Method: block -- Cannot pass \"sealed\" with \"id\" or \"height\"`\n  )\n\n  invariant(\n    !(id && height),\n    `Method: block -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get block by ID\n  if (id) return send([getBlock(), atBlockId(id)], opts).then(decode)\n\n  // Get block by height\n  if (height)\n    return send([getBlock(), atBlockHeight(height)], opts).then(decode)\n\n  // Get latest block\n  return send([getBlock(sealed)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\nimport * as logger from \"@onflow/util-logger\"\n\nexport function getEvents(eventType, start, end) {\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    logger.log.deprecate({\n      pkg: \"FCL/SDK\",\n      subject: \"Passing a start and end into getEvents\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\",\n    })\n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(eventType, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport async function payer(authz) {\n  return prepAccount(authz, {role: PAYER})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([makeScript, put(\"ix.cadence\", template(...args))])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import {put} from \"../interaction/interaction.js\"\n\nexport function voucherIntercept(fn) {\n  return put(\"ix.voucher-intercept\", fn)\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response as responseModule} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nexport const resolveProposerSequenceNumber =\n  ({node}) =>\n  async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    const response = await sendFn(\n      await build([getAccount(ix.accounts[ix.proposer].addr)]),\n      {config, response: responseModule, Buffer, ix: ixModule},\n      {node}\n    )\n    const decoded = await decodeResponse(response)\n\n    ix.accounts[ix.proposer].sequenceNum =\n      decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n    return Ok(ix)\n  }\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isGetAccount, isGetBlock} from \"../interaction/interaction\"\n\nexport function mockAccountResponse(ix, numberOfKeys = 5) {\n  // prettier-ignore\n  invariant(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix)\n  // prettier-ignore\n  invariant( ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix)\n\n  const address = ix.account.addr\n\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({length: numberOfKeys}, (_, i) => ({\n        index: i,\n        sequenceNumber: 42,\n      })),\n    },\n  }\n}\n\nexport function mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\",\n    },\n  }\n}\n\nconst identity = v => v\n\nexport function mockSend(fallback = identity) {\n  return async function execSend(ix) {\n    ix = await ix\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix)\n\n      case isGetBlock(ix):\n        return mockGetBlockResponse(ix)\n\n      default:\n        return fallback(ix)\n    }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport const idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport function sig(opts) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\")\n}\n\nexport function authzFn(opts = {}) {\n  return function (account) {\n    const acct = {\n      ...account,\n      ...opts,\n      signingFunction:\n        opts.signingFunction ||\n        account.signingFunction ||\n        fallbackSigningFunction,\n    }\n\n    return acct\n\n    function fallbackSigningFunction(signable) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct),\n      }\n    }\n  }\n}\n\nexport function authzResolve(opts = {}) {\n  return function (account) {\n    const {tempId, ...rest} = opts\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest),\n    }\n  }\n}\n\nconst ROLE = {proposer: false, authorizer: false, payer: false}\nconst noop = () => {}\n\nexport function authzResolveMany(opts = {}) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve: () =>\n        [\n          opts.proposer &&\n            authzFn(opts.proposer)({role: {...ROLE, proposer: true}}),\n          ...opts.authorizations\n            .map(authzFn)\n            .map(d => d({role: {...ROLE, authorizer: true}})),\n          opts.payer && authzFn(opts.payer)({role: {...ROLE, payer: true}}),\n        ].filter(Boolean),\n    }\n  }\n}\n","import {build} from \"../build/build\"\nimport {resolve} from \"../resolve/resolve\"\nimport {ref} from \"../build/build-ref\"\n\nexport const run = (fns = []) => build([ref(\"123\"), ...fns]).then(resolve)\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import * as logger from \"@onflow/util-logger\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\nexport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n  encodeTxIdFromVoucher,\n} from \"./encode/encode\"\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher, voucherToTxId} from \"./resolve/voucher.js\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {account} from \"./account/account.js\"\nexport {block} from \"./block/block.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\nexport {voucherIntercept} from \"./build/build-voucher-intercept.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\nexport {resolveVoucherIntercept} from \"./resolve/resolve-voucher-intercept.js\"\n\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = params =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The params builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\nexport const param = params =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The param builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\n\nimport * as TestUtils from \"./test-utils\"\nexport {TestUtils}\n\nexport {VERSION} from \"./VERSION\"\n"],"names":["UNKNOWN","SCRIPT","TRANSACTION","GET_TRANSACTION_STATUS","GET_ACCOUNT","GET_EVENTS","PING","GET_TRANSACTION","GET_BLOCK","GET_BLOCK_HEADER","GET_COLLECTION","BAD","OK","ACCOUNT","PARAM","ARGUMENT","AUTHORIZER","PAYER","PROPOSER","ACCT","ARG","IX","KEYS","Set","Object","keys","JSON","parse","interaction","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","isNumber","d","isArray","isObj","isNull","isFn","isInteraction","ix","key","hasOwnProperty","Ok","status","Bad","reason","makeIx","wat","tag","prepAccountKeyId","acct","keyId","invariant","isNaN","parseInt","prepAccount","opts","role","tempId","authorization","resolve","rest","reduce","fn","accounts","authorizations","push","payer","makeArgument","arg","message","arguments","value","asArgument","xform","resolveArgument","bind","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isOk","isBad","why","isAccount","account","kind","isParam","param","isArgument","argument","hardMode","has","Error","recPipe","fns","hd","cur","pipe","args","arg1","arg2","identity","v","get","fallback","assigns","put","update","destroy","build","DEFAULT_RESPONSE","response","getBlock","isSealed","block","getAccount","addr","sansPrefix","latestBlockDeprecationNotice","log","deprecate","pkg","subject","transition","decodeImplicit","i","decodeVoid","decodeType","type","staticType","decodePath","path","domain","identifier","decodeCapability","cap","address","borrowType","decodeOptional","optional","decoders","stack","recurseDecode","decodeReference","decodeArray","array","Promise","all","map","res","decodeDictionary","dictionary","acc","decodeComposite","composite","fields","name","decoded","decoder","id","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","Reference","Dictionary","Event","Resource","Struct","Enum","Type","Path","Capability","lookup","found","find","test","reg","RegExp","substring","decodeInstructions","decode","customDecoders","filteredDecoders","filter","customDecoder","decoderKey","decodeResponse","encodedData","transactionStatus","events","e","transactionId","transactionIndex","eventIndex","payload","data","decodeEvents","transaction","blockId","blockHeight","blockTimestamp","blockHeader","latestBlock","collection","getRefId","config","node","first","defaultSend","sendFn","Buffer","ixModule","resolveRefBlockId","refBlock","isString","resolveCadence","cadence","where","then","entries","regex","replace","cast","handleArgResolution","depth","resolvedArg","resolveArguments","encodeTransactionPayload","tx","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","encodeTxIdFromVoucher","voucher","sha3_256","prepareVoucher","rightPaddedHexBuffer","pad","padEnd","leftPaddedHexBuffer","padStart","TRANSACTION_DOMAIN_TAG","toString","addressBuffer","blockBuffer","argumentToString","stringify","scriptBuffer","script","signatureBuffer","signature","encode","msg","sha","SHA3","digest","validatePayload","computeLimit","proposalKey","sequenceNum","authorizers","authorizer","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","sig","signerIndex","sort","a","b","Map","addSigner","set","forEach","validateVoucher","prepareSigs","sigs","envelopeSigs","payloadFields","field","checkField","proposalKeyFields","payloadSigsFields","index","payloadSigFields","envelopeSigsFields","envelopeSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","findInsideSigners","inside","add","proposer","p","findOutsideSigners","outside","createSignableVoucher","buildAuthorizers","cid","withPrefix","prev","current","item","buildInsideSigners","buildOutsideSigners","voucherToTxId","idof","buildPreSignable","f_type","f_vsn","roles","error","console","collectAccounts","last","ax","old","dupList","payerAccts","g","includes","multiAccts","curr","resolveAccounts","values","resolveSignatures","insideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","outsidePayload","encodeOutsideMessage","signingFunction","buildSignable","innerFetchSignature","payerAddress","resolveValidators","validators","cb","resolveFinalNormalization","resolveVoucherIntercept","DEFAULT_COMPUTE_LIMIT","resolveComputeLimit","logger","noop","debug","accts","Boolean","execFetchRef","execFetchSequenceNumber","sequenceNumber","predicate","send","defaultResolve","resolveFn","decodersFromConfig","pattern","fromEntries","findPayloadSigners","findEnvelopeSigners","envelope","UnableToDetermineMessageEncodingTypeForSignerAddress","signerAddress","trim","encodeMessageFromSignable","signable","payloadSigners","envelopeSigners","isPayloadSigner","isEnvelopeSigner","ps","validator","atBlockHeight","height","atBlockId","sealed","authz","getEvents","eventType","start","end","getEventsAtBlockHeightRange","getEventsAtBlockIds","blockIds","getBlockHeader","getCollection","getTransactionStatus","getTransaction","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","DEFUALT_REF","voucherIntercept","resolveProposerSequenceNumber","responseModule","mockAccountResponse","numberOfKeys","_","mockGetBlockResponse","mockSend","execSend","authzFn","fallbackSigningFunction","authzResolve","ROLE","authzResolveMany","run","VERSION","params","level","LEVELS"],"mappings":"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"}