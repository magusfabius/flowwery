{"version":3,"file":"actor.js","sources":["../src/mailbox/index.js","../src/index.js"],"sourcesContent":["export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","import {mailbox as createMailbox} from \"./mailbox\"\nimport queueMicrotask from \"queue-microtask\"\n\nexport const INIT = \"INIT\"\nexport const SUBSCRIBE = \"SUBSCRIBE\"\nexport const UNSUBSCRIBE = \"UNSUBSCRIBE\"\nexport const UPDATED = \"UPDATED\"\nexport const SNAPSHOT = \"SNAPSHOT\"\nexport const EXIT = \"EXIT\"\nexport const TERMINATE = \"TERMINATE\"\n\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global === \"object\" && global.global === global && global) ||\n  (typeof window === \"object\" && window.window === window && window)\n\nroot.FCL_REGISTRY = root.FCL_REGISTRY == null ? {} : root.FCL_REGISTRY\nvar pid = 0b0\n\nconst DEFAULT_TIMEOUT = 5000\nconst DEFAULT_TAG = \"---\"\nexport const send = (addr, tag, data, opts = {}) =>\n  new Promise((reply, reject) => {\n    const expectReply = opts.expectReply || false\n    const timeout = opts.timeout != null ? opts.timeout : DEFAULT_TIMEOUT\n\n    if (expectReply && timeout) {\n      setTimeout(\n        () =>\n          reject(new Error(`Timeout: ${timeout}ms passed without a response.`)),\n        timeout\n      )\n    }\n\n    const payload = {\n      to: addr,\n      from: opts.from,\n      tag,\n      data,\n      timeout,\n      reply,\n      reject,\n    }\n\n    try {\n      root.FCL_REGISTRY[addr] &&\n        root.FCL_REGISTRY[addr].mailbox.deliver(payload)\n      if (!expectReply) reply(true)\n    } catch (error) {\n      console.error(\n        \"FCL.Actor -- Could Not Deliver Message\",\n        payload,\n        root.FCL_REGISTRY[addr],\n        error\n      )\n    }\n  })\n\nexport const kill = addr => {\n  delete root.FCL_REGISTRY[addr]\n}\n\nconst fromHandlers =\n  (handlers = {}) =>\n  async ctx => {\n    if (typeof handlers[INIT] === \"function\") await handlers[INIT](ctx)\n    __loop: while (1) {\n      const letter = await ctx.receive()\n      try {\n        if (letter.tag === EXIT) {\n          if (typeof handlers[TERMINATE] === \"function\") {\n            await handlers[TERMINATE](ctx, letter, letter.data || {})\n          }\n          break __loop\n        }\n        await handlers[letter.tag](ctx, letter, letter.data || {})\n      } catch (error) {\n        console.error(`${ctx.self()} Error`, letter, error)\n      } finally {\n        continue __loop\n      }\n    }\n  }\n\nexport const spawn = (fn, addr = null) => {\n  if (addr == null) addr = ++pid\n  if (root.FCL_REGISTRY[addr] != null) return addr\n\n  root.FCL_REGISTRY[addr] = {\n    addr,\n    mailbox: createMailbox(),\n    subs: new Set(),\n    kvs: {},\n    error: null,\n  }\n\n  const ctx = {\n    self: () => addr,\n    receive: () => root.FCL_REGISTRY[addr].mailbox.receive(),\n    send: (to, tag, data, opts = {}) => {\n      opts.from = addr\n      return send(to, tag, data, opts)\n    },\n    sendSelf: (tag, data, opts) => {\n      if (root.FCL_REGISTRY[addr]) send(addr, tag, data, opts)\n    },\n    broadcast: (tag, data, opts = {}) => {\n      opts.from = addr\n      for (let to of root.FCL_REGISTRY[addr].subs) send(to, tag, data, opts)\n    },\n    subscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.add(sub),\n    unsubscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.delete(sub),\n    subscriberCount: () => root.FCL_REGISTRY[addr].subs.size,\n    hasSubs: () => !!root.FCL_REGISTRY[addr].subs.size,\n    put: (key, value) => {\n      if (key != null) root.FCL_REGISTRY[addr].kvs[key] = value\n    },\n    get: (key, fallback) => {\n      const value = root.FCL_REGISTRY[addr].kvs[key]\n      return value == null ? fallback : value\n    },\n    delete: key => {\n      delete root.FCL_REGISTRY[addr].kvs[key]\n    },\n    update: (key, fn) => {\n      if (key != null)\n        root.FCL_REGISTRY[addr].kvs[key] = fn(root.FCL_REGISTRY[addr].kvs[key])\n    },\n    keys: () => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs)\n    },\n    all: () => {\n      return root.FCL_REGISTRY[addr].kvs\n    },\n    where: pattern => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs).reduce((acc, key) => {\n        return pattern.test(key)\n          ? {...acc, [key]: root.FCL_REGISTRY[addr].kvs[key]}\n          : acc\n      }, {})\n    },\n    merge: (data = {}) => {\n      Object.keys(data).forEach(\n        key => (root.FCL_REGISTRY[addr].kvs[key] = data[key])\n      )\n    },\n    fatalError: error => {\n      root.FCL_REGISTRY[addr].error = error\n      for (let to of root.FCL_REGISTRY[addr].subs) send(to, UPDATED)\n    },\n  }\n\n  if (typeof fn === \"object\") fn = fromHandlers(fn)\n\n  queueMicrotask(async () => {\n    await fn(ctx)\n    kill(addr)\n  })\n\n  return addr\n}\n\n// Returns an unsubscribe function\n// A SUBSCRIBE handler will need to be created to handle the subscription event\n//\n//  [SUBSCRIBE]: (ctx, letter) => {\n//    ctx.subscribe(letter.from)\n//    ctx.send(letter.from, UPDATED, ctx.all())\n//  }\n//\nexport function subscriber(address, spawnFn, callback) {\n  spawnFn(address)\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(address, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      const error = root.FCL_REGISTRY[address].error\n      if (letter.tag === EXIT) {\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n      if (error) {\n        callback(null, error)\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n\n      callback(letter.data, null)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n// Returns a promise that returns a result\n// A SNAPSHOT handler will need to be created to handle the snapshot event\n//\n//  [SNAPSHOT]: (ctx, letter) => {\n//    letter.reply(ctx.all())\n//  }\n//\nexport function snapshoter(address, spawnFn) {\n  spawnFn(address)\n  return send(address, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n"],"names":["mailbox","queue","next","deliver","msg","_asyncToGenerator","_regeneratorRuntime","push","shift","undefined","receive","Promise","innerReceive","resolve","INIT","SUBSCRIBE","UNSUBSCRIBE","UPDATED","SNAPSHOT","EXIT","TERMINATE","root","self","global","window","FCL_REGISTRY","pid","DEFAULT_TIMEOUT","send","addr","tag","data","opts","reply","reject","expectReply","timeout","setTimeout","Error","payload","to","from","error","console","kill","fromHandlers","handlers","ctx","letter","spawn","fn","createMailbox","subs","Set","kvs","sendSelf","broadcast","_createForOfIteratorHelper","subscribe","sub","add","unsubscribe","subscriberCount","size","hasSubs","put","key","value","get","fallback","update","keys","Object","all","where","pattern","reduce","acc","test","merge","forEach","fatalError","_typeof","queueMicrotask","subscriber","address","spawnFn","callback","snapshoter"],"mappings":"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"}