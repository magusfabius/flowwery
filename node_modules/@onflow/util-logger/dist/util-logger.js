'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var config = require('@onflow/config');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);

var LEVELS = Object.freeze({
  debug: 5,
  info: 4,
  log: 3,
  warn: 2,
  error: 1
});

var buildLoggerMessageArgs = function buildLoggerMessageArgs(_ref) {
  var title = _ref.title,
      message = _ref.message;
  return ["\n    %c".concat(title, "\n    ============================\n\n    ").concat(message, "\n\n    ============================\n    ").replace(/\n[^\S\r\n]+/g, "\n").trim(),, "font-weight:bold;font-family:monospace;"];
};

var log = /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee(_ref2) {
    var _console, _console2, _console3, _console4, _console5;

    var title, message, level, _ref2$always, always, configLoggerLevel, loggerMessageArgs;

    return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            title = _ref2.title, message = _ref2.message, level = _ref2.level, _ref2$always = _ref2.always, always = _ref2$always === void 0 ? false : _ref2$always;
            _context.next = 3;
            return config.config.get("logger.level", LEVELS.warn);

          case 3:
            configLoggerLevel = _context.sent;

            if (!(!always && configLoggerLevel < level)) {
              _context.next = 6;
              break;
            }

            return _context.abrupt("return");

          case 6:
            loggerMessageArgs = buildLoggerMessageArgs({
              title: title,
              message: message
            });
            _context.t0 = level;
            _context.next = _context.t0 === LEVELS.debug ? 10 : _context.t0 === LEVELS.info ? 12 : _context.t0 === LEVELS.warn ? 14 : _context.t0 === LEVELS.error ? 16 : 18;
            break;

          case 10:
            (_console = console).debug.apply(_console, _toConsumableArray__default["default"](loggerMessageArgs));

            return _context.abrupt("break", 19);

          case 12:
            (_console2 = console).info.apply(_console2, _toConsumableArray__default["default"](loggerMessageArgs));

            return _context.abrupt("break", 19);

          case 14:
            (_console3 = console).warn.apply(_console3, _toConsumableArray__default["default"](loggerMessageArgs));

            return _context.abrupt("break", 19);

          case 16:
            (_console4 = console).error.apply(_console4, _toConsumableArray__default["default"](loggerMessageArgs));

            return _context.abrupt("break", 19);

          case 18:
            (_console5 = console).log.apply(_console5, _toConsumableArray__default["default"](loggerMessageArgs));

          case 19:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function log(_x) {
    return _ref3.apply(this, arguments);
  };
}();

log.deprecate = function (_ref4) {
  var pkg = _ref4.pkg,
      subject = _ref4.subject,
      transition = _ref4.transition,
      _ref4$level = _ref4.level,
      level = _ref4$level === void 0 ? LEVELS.warn : _ref4$level,
      _ref4$message = _ref4.message,
      message = _ref4$message === void 0 ? "" : _ref4$message,
      _ref4$callback = _ref4.callback,
      callback = _ref4$callback === void 0 ? null : _ref4$callback;

  var capitalizeFirstLetter = function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };

  var logMessage = function logMessage() {
    return log({
      title: "".concat(pkg ? pkg + " " : "", "Deprecation Notice"),
      message: "\n      ".concat(subject ? "".concat(capitalizeFirstLetter(subject), " is deprecated and will cease to work in future releases").concat(pkg ? " of " + pkg : "", ".") : "").concat(message ? "\n" + message : "").concat(transition ? "\nYou can learn more (including a guide on common transition paths) here: ".concat(transition) : "", "\n    ").trim(),
      level: level
    });
  };

  if (typeof callback === "function") {
    return /*#__PURE__*/_asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee2() {
      var _args2 = arguments;
      return _regeneratorRuntime__default["default"].wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return logMessage();

            case 2:
              _context2.next = 4;
              return callback.apply(void 0, _args2);

            case 4:
              return _context2.abrupt("return", _context2.sent);

            case 5:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));
  }

  return logMessage();
};

exports.LEVELS = LEVELS;
exports.log = log;
//# sourceMappingURL=util-logger.js.map
