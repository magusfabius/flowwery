{"version":3,"file":"fcl.module.js","sources":["../src/default-config.js","../src/VERSION.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/document/document.js","../src/normalizers/interaction-template/interaction-template.js","../src/interaction-template-utils/derive-cadence-by-network.js","../src/exec/utils/derive-dependencies.js","../src/exec/utils/prep-template-opts.js","../src/exec/utils/pre.js","../src/exec/query.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/normalizers/service/__vsn.js","../src/normalizers/service/authn.js","../src/normalizers/service/authz.js","../src/normalizers/service/pre-authz.js","../src/normalizers/service/frame.js","../src/normalizers/service/back-channel-rpc.js","../src/normalizers/service/open-id.js","../src/normalizers/service/user-signature.js","../src/normalizers/service/local-view.js","../src/normalizers/service/account-proof.js","../src/normalizers/service/authn-refresh.js","../src/normalizers/service/service.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/normalizers/service/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/render-pop.js","../src/current-user/exec-service/strategies/utils/render-tab.js","../src/current-user/exec-service/exec-local.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/strategies/utils/buildMessageHandler.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/exec-service/strategies/utils/pop.js","../src/current-user/exec-service/strategies/pop-rpc.js","../src/current-user/exec-service/strategies/utils/tab.js","../src/current-user/exec-service/strategies/tab-rpc.js","../src/current-user/exec-service/strategies/utils/extension.js","../src/current-user/exec-service/strategies/ext-rpc.js","../src/current-user/exec-service/plugins.js","../src/current-user/exec-service/index.js","../src/normalizers/service/composite-signature.js","../src/discovery/utils.js","../src/discovery/services.js","../src/discovery/services/authn.js","../src/discovery/index.js","../src/utils/index.js","../src/current-user/index.js","../src/exec/mutate.js","../src/wallet-utils/on-message-from-fcl.js","../src/wallet-utils/send-msg-to-fcl.js","../src/wallet-utils/CompositeSignature.js","../src/wallet-utils/encode-account-proof.js","../src/wallet-utils/inject-ext-service.js","../src/app-utils/verify-signatures.js","../src/exec/verify.js","../src/serialize/index.js","../src/transaction/index.js","../src/events/index.js","../../../node_modules/sha3/sponge/permute/copy/index.js","../../../node_modules/sha3/sponge/permute/chi/index.js","../../../node_modules/sha3/sponge/permute/iota/round-constants/index.js","../../../node_modules/sha3/sponge/permute/iota/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/index.js","../../../node_modules/sha3/sponge/permute/theta/index.js","../../../node_modules/sha3/sponge/permute/index.js","../../../node_modules/sha3/sponge/index.js","../../../node_modules/sha3/index.js","../src/interaction-template-utils/utils/hash.js","../src/interaction-template-utils/generate-template-id.js","../src/interaction-template-utils/get-interaction-template-audits.js","../src/interaction-template-utils/utils/generate-import.js","../src/interaction-template-utils/utils/find-imports.js","../src/interaction-template-utils/generate-dependency-pin.js","../src/normalizers/interaction-template/interaction-template-interface.js","../src/interaction-template-utils/generate-template-interface-id.js","../src/interaction-template-utils/verify-dependency-pin-same-at-block.js","../src/interaction-template-utils/get-template-message.js","../src/interaction-template-utils/get-template-argument-message.js","../src/fcl.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\nconst isServerSide = () => typeof window === \"undefined\"\n\nconst SESSION_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(sessionStorage.getItem(key)),\n  put: async (key, value) => sessionStorage.setItem(key, JSON.stringify(value)),\n}\n\nconfig({\n  \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n  \"fcl.storage.default\": SESSION_STORAGE,\n})\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport fetchTransport from \"node-fetch\"\nimport {config} from \"@onflow/config\"\n\nasync function httpDocumentResolver({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n\n  let res\n  try {\n    res = await fetchTransport(url)\n  } catch (e) {\n    throw new Error(\"httpDocumentResolver Error: Failed to retrieve document.\")\n  }\n\n  let document = res.ok ? await res.json() : null\n\n  return document\n}\n\nconst DOCUMENT_RESOLVERS = new Map([\n  [\"http\", httpDocumentResolver],\n  [\"https\", httpDocumentResolver],\n])\n\nexport async function retrieve({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n  invariant(\n    typeof url === \"string\",\n    \"retrieve({ url }) -- url must be a string\"\n  )\n\n  const documentResolversFromConfig = await config().where(\n    /^document\\.resolver\\./\n  )\n  Object.keys(documentResolversFromConfig).map(key => {\n    const resolverFromConfig = documentResolversFromConfig[key]\n    const resolverProtocol = key.replace(/^document\\.resolver\\./, \"\")\n    DOCUMENT_RESOLVERS.set(resolverProtocol, resolverFromConfig)\n  })\n\n  const urlParts = /^(.*):\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/.exec(url)\n  invariant(urlParts, \"Failed to parse URL\")\n  const protocol = urlParts[1]\n  invariant(urlParts, \"Failed to parse URL protocol\")\n\n  const resolver = DOCUMENT_RESOLVERS.get(protocol)\n  invariant(resolver, `No resolver found for protcol=${protocol}`)\n\n  let document = await resolver({url})\n\n  return document\n}\n","export function normalizeInteractionTemplate(template) {\n  if (template == null) return null\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      return template\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplate Error: Invalid InteractionTemplate\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template\"\n\nexport function deriveCadenceByNetwork({network, template}) {\n  invariant(\n    network != undefined,\n    \"deriveCadenceByNetwork({ network }) -- network must be defined\"\n  )\n  invariant(\n    typeof network === \"string\",\n    \"deriveCadenceByNetwork({ network }) -- network must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let networkDependencies = Object.keys(template?.data?.dependencies).map(\n        dependencyPlaceholder => {\n          let dependencyNetworkContracts = Object.values(\n            template?.data?.dependencies?.[dependencyPlaceholder]\n          )\n\n          invariant(\n            dependencyNetworkContracts,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          invariant(\n            dependencyNetworkContracts.length === 0,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          let dependencyContract = dependencyNetworkContracts[0]\n          let dependencyContractForNetwork = dependencyContract?.[network]\n\n          invariant(\n            dependencyContractForNetwork,\n            `deriveCadenceByNetwork -- Could not find ${network} network information for dependency: ${dependencyPlaceholder}`\n          )\n\n          return [dependencyPlaceholder, dependencyContractForNetwork.address]\n        }\n      )\n\n      return networkDependencies.reduce((cadence, [placeholder, address]) => {\n        const regex = new RegExp(\"(\\\\b\" + placeholder + \"\\\\b)\", \"g\")\n        return cadence.replace(regex, address)\n      }, template.data.cadence)\n\n    default:\n      throw new Error(\n        \"deriveCadenceByNetwork Error: Unsupported template version\"\n      )\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nexport async function deriveDependencies({template}) {\n  const network = await config.get(\"flow.network\")\n\n  invariant(\n    network,\n    \"FCL configureDependencies Error: Missing configuration value for 'flow.network'\"\n  )\n\n  const derivedDependencies = {}\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      const dependencyPlaceholderKeys = Object.keys(\n        template?.data?.dependencies\n      )\n      for (let dependencyPlaceholderKey of dependencyPlaceholderKeys) {\n        let dependencyPlaceholder =\n          template?.data?.dependencies[dependencyPlaceholderKey]\n\n        const dependencyPlaceholderContractsKeys = Object.keys(\n          dependencyPlaceholder\n        )\n        invariant(\n          dependencyPlaceholderContractsKeys.length > 0,\n          `FCL configureDependencies Error: No contracts found in template for placeholder=${dependencyPlaceholderKey}`\n        )\n        const dependencyPlaceholderContract =\n          dependencyPlaceholder[dependencyPlaceholderContractsKeys[0]]\n        const dependency = dependencyPlaceholderContract[network]\n\n        invariant(\n          dependency,\n          `FCL configureDependencies Error: No dependency information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n        invariant(\n          dependency?.address,\n          `FCL configureDependencies Error: No address information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n\n        derivedDependencies[dependencyPlaceholderKey] = withPrefix(\n          dependency?.address\n        )\n      }\n\n      return derivedDependencies\n\n    default:\n      throw new Error(\n        \"FCL configureDependencies Error: Unsupported template version\"\n      )\n  }\n}\n","import * as sdk from \"@onflow/sdk\"\nimport {retrieve} from \"../../document/document.js\"\nimport {normalizeInteractionTemplate} from \"../../normalizers/interaction-template/interaction-template\"\nimport {deriveCadenceByNetwork} from \"../../interaction-template-utils/derive-cadence-by-network.js\"\nimport {deriveDependencies} from \"./derive-dependencies\"\nimport {isString} from \"./is\"\n\nexport async function prepTemplateOpts(opts) {\n  if (isString(opts?.template)) {\n    opts.template = await retrieve({url: opts?.template})\n  }\n\n  let dependencies = {}\n  if (opts?.template) {\n    opts.template = normalizeInteractionTemplate(opts?.template)\n    dependencies = await deriveDependencies({template: opts.template})\n  }\n\n  const cadence =\n    opts.cadence ||\n    deriveCadenceByNetwork({\n      template: opts.template,\n      network: await sdk.config().get(\"flow.network\"),\n    })\n\n  opts.cadence = cadence\n  opts.dependencies = dependencies\n\n  return opts\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString} from \"./is\"\n\nasync function pre(type, opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), `${type}(opts) -- opts is required`)\n  // prettier-ignore\n  invariant(isObject(opts), `${type}(opts) -- opts must be an object`)\n  // prettier-ignore\n  invariant(!(opts.cadence && opts.template), `${type}({ template, cadence }) -- cannot pass both cadence and template`)\n  // prettier-ignore\n  invariant(isRequired(opts.cadence || opts?.template), `${type}({ cadence }) -- cadence is required`)\n  // // prettier-ignore\n  invariant(\n    isString(opts.cadence) || opts?.template,\n    `${type}({ cadence }) -- cadence must be a string`\n  )\n  // prettier-ignore\n  invariant(\n    opts.cadence || (await sdk.config().get(\"flow.network\")),\n    `${type}(opts) -- Required value for \"flow.network\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n  // prettier-ignore\n  invariant(\n    await sdk.config().get(\"accessNode.api\"),\n    `${type}(opts) -- Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n\nexport async function preMutate(opts) {\n  return pre(\"mutate\", opts)\n}\n\nexport async function preQuery(opts) {\n  return pre(\"query\", opts)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preQuery} from \"./utils/pre.js\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {Object} opts.template - Interaction Template for a script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n  opts = await prepTemplateOpts(opts)\n\n  return sdk.config().overload(opts.dependencies || {}, async () =>\n    // prettier-ignore\n    sdk.send([\n      sdk.script(opts.cadence),\n      sdk.args(normalizeArgs(opts.args || [])),\n      opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n    ]).then(sdk.decode)\n  )\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","// {\n//   \"f_type\": \"Service\",                    // Its a service!\n//   \"f_vsn\": \"1.0.0\",                       // Follows the v1.0.0 spec for the service\n//   \"type\": \"account-proof\",                // the type of service it is\n//   \"method\": \"DATA\",                       // Its data!\n//   \"uid\": \"awesome-wallet#account-proof\",  // A unique identifier for the service\n//   \"data\": {\n//     \"f_type\": \"account-proof\",\n//     \"f_vsn\": \"1.0.0\",\n//     \"nonce\": \"0A1BC2FF\",                  // Nonce signed by the current account-proof (minimum 32 bytes in total, i.e 64 hex characters)\n//     \"address\": \"0xUSER\",                  // The user's address (8 bytes, i.e 16 hex characters)\n//     \"signature\": CompositeSignature,      // address (sans-prefix), keyId, signature (hex)\n// }\n\nexport function normalizeAccountProof(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(`FCL Normalizer Error: Invalid account-proof service`)\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn-refresh\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthnRefresh(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid authn-refresh service\")\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\nimport {normalizeAccountProof} from \"./account-proof\"\nimport {normalizeAuthnRefresh} from \"./authn-refresh\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n  \"account-proof\": normalizeAccountProof,\n  \"authn-refresh\": normalizeAuthnRefresh,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"../normalizers/service/__vsn\"\nimport {normalizeService} from \"../normalizers/service/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.expires,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then(d => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status ?? \"APPROVED\",\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {...resp} || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../../normalizers/service/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {normalizeLocalView} from \"../../../normalizers/service/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport async function execHttpPost({service, body, config, opts}) {\n  const resp = await fetchService(service, {\n    data: {\n      fclVersion: VERSION,\n      service: {\n        params: service.params,\n        data: service.data,\n        type: service.type,\n      },\n      config,\n      ...body,\n    },\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"REDIRECT\") {\n    return resp\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","const CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nexport const buildMessageHandler =\n  ({close, send, onReady, onResponse, onMessage}) =>\n  e => {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\nimport {isRequired, isString, isObject, isFunc} from \"../../exec/utils/is\"\n\nconst CORE_STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n  \"EXT/RPC\": execExtRPC,\n}\n\nconst supportedPlugins = [\"ServicePlugin\"]\nconst supportedServicePlugins = [\"discovery-service\"]\n\nconst validateDiscoveryPlugin = servicePlugin => {\n  const {services, serviceStrategy} = servicePlugin\n  invariant(\n    Array.isArray(services) && services.length,\n    \"Array of Discovery Services is required\"\n  )\n\n  for (const ds of services) {\n    invariant(\n      isRequired(ds.f_type) && ds.f_type === \"Service\",\n      \"Service is required\"\n    )\n    invariant(\n      isRequired(ds.type) && ds.type === \"authn\",\n      `Service must be type authn. Received ${ds.type}`\n    )\n    invariant(\n      ds.method in CORE_STRATEGIES || serviceStrategy.method === ds.method,\n      `Service method ${ds.method} is not supported`\n    )\n  }\n\n  invariant(isRequired(serviceStrategy), \"Service strategy is required\")\n  invariant(\n    isRequired(serviceStrategy.method) && isString(serviceStrategy.method),\n    \"Service strategy method is required\"\n  )\n  invariant(\n    isRequired(serviceStrategy.exec) && isFunc(serviceStrategy.exec),\n    \"Service strategy exec function is required\"\n  )\n\n  return {discoveryServices: services, serviceStrategy}\n}\n\nconst ServiceRegistry = () => {\n  let services = new Set()\n  let strategies = new Map(Object.entries(CORE_STRATEGIES))\n\n  const add = servicePlugin => {\n    invariant(\n      supportedServicePlugins.includes(servicePlugin.type),\n      `Service Plugin type ${servicePlugin.type} is not supported`\n    )\n    if (servicePlugin.type === \"discovery-service\") {\n      const {discoveryServices, serviceStrategy} =\n        validateDiscoveryPlugin(servicePlugin)\n      setServices(discoveryServices)\n      if (!strategies.has(serviceStrategy.method)) {\n        strategies.set(serviceStrategy.method, serviceStrategy.exec)\n      } else {\n        log({\n          title: `Add Service Plugin`,\n          message: `Service strategy for ${serviceStrategy.method} already exists`,\n          level: LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  const setServices = discoveryServices =>\n    (services = new Set([...discoveryServices]))\n\n  const getServices = () => [...services]\n\n  const getStrategy = method => strategies.get(method)\n\n  const getStrategies = () => [...strategies.keys()]\n\n  return Object.freeze({\n    add,\n    getServices,\n    getStrategy,\n    getStrategies,\n  })\n}\n\nconst validatePlugins = plugins => {\n  let pluginsArray\n  invariant(plugins, \"No plugins supplied\")\n\n  if (!Array.isArray(plugins)) {\n    pluginsArray = [plugins]\n  } else {\n    pluginsArray = [...plugins]\n  }\n  for (const p of pluginsArray) {\n    invariant(isRequired(p.name), \"Plugin name is required\")\n    invariant(isRequired(p.f_type), \"Plugin f_type is required\")\n    invariant(\n      supportedPlugins.includes(p.f_type),\n      `Plugin type ${p.f_type} is not supported`\n    )\n  }\n\n  return pluginsArray\n}\n\nconst PluginRegistry = () => {\n  const pluginsMap = new Map()\n\n  const getPlugins = () => pluginsMap\n\n  const add = plugins => {\n    const pluginsArray = validatePlugins(plugins)\n    for (const p of pluginsArray) {\n      pluginsMap.set(p.name, p)\n      if (p.f_type === \"ServicePlugin\") {\n        serviceRegistry.add(p)\n      }\n    }\n  }\n\n  return Object.freeze({\n    add,\n    getPlugins,\n  })\n}\n\nexport const serviceRegistry = ServiceRegistry()\nexport const pluginRegistry = PluginRegistry()\n","import {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {serviceRegistry} from \"./plugins\"\nimport {configLens} from \"../../default-config\"\nimport {VERSION} from \"../../VERSION\"\n\nconst execStrategy = async ({service, body, config, opts}) => {\n  const strategy = serviceRegistry.getStrategy(service.method)\n  return strategy({service, body, config, opts})\n}\n\nexport async function execService({service, msg = {}, config = {}, opts = {}}) {\n  msg.data = service.data\n  const execConfig = {\n    services: await configLens(/^service\\./),\n    app: await configLens(/^app\\.detail\\./),\n    client: {\n      ...config.client,\n      fclVersion: VERSION,\n      fclLibrary: \"https://github.com/onflow/fcl-js\",\n      hostname: window?.location?.hostname ?? null,\n    },\n  }\n\n  try {\n    const res = await execStrategy({\n      service,\n      body: msg,\n      config: execConfig,\n      opts,\n    })\n    if (res.status === \"REDIRECT\") {\n      invariant(\n        service.type === res.data.type,\n        \"Cannot shift recursive service type in execService\"\n      )\n      return await execService({\n        service: res.data,\n        msg,\n        config: execConfig,\n        opts,\n      })\n    } else {\n      return res\n    }\n  } catch (error) {\n    log({\n      title: `Error on execService ${service?.type}`,\n      message: error,\n      level: LEVELS.error,\n    })\n    throw error\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {serviceRegistry} from \"../current-user/exec-service/plugins\"\n\nexport const makeDiscoveryServices = async () => {\n  const extensionServices = window?.fcl_extensions || []\n  return [...extensionServices, ...serviceRegistry.getServices()]\n}\n\nexport async function getDiscoveryService(service) {\n  const discoveryAuthnInclude = await config.get(\"discovery.authn.include\", [])\n  const discoveryWalletMethod = await config.first([\n    \"discovery.wallet.method\",\n    \"discovery.wallet.method.default\",\n  ])\n  const method = service?.method ? service.method : discoveryWalletMethod\n  const endpoint =\n    service?.endpoint ??\n    (await config.first([\"discovery.wallet\", \"challenge.handshake\"]))\n\n  invariant(\n    endpoint,\n    `\n    If no service is passed to \"authenticate,\" then \"discovery.wallet\" must be defined in fcl config.\n    See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n    `\n  )\n\n  return {\n    ...service,\n    type: \"authn\",\n    endpoint,\n    method,\n    discoveryAuthnInclude,\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {serviceRegistry} from \"../current-user/exec-service/plugins\"\nimport {VERSION} from \"../VERSION\"\nimport {makeDiscoveryServices} from \"./utils\"\n\nexport async function getServices({types}) {\n  const endpoint = await config.get(\"discovery.authn.endpoint\")\n  invariant(\n    Boolean(endpoint),\n    `\"discovery.authn.endpoint\" in config must be defined.`\n  )\n\n  const include = await config.get(\"discovery.authn.include\", [])\n  const url = new URL(endpoint)\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      type: types,\n      fclVersion: VERSION,\n      include,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: serviceRegistry.getStrategies(),\n      userAgent: window?.navigator?.userAgent,\n    }),\n  }).then(d => d.json())\n}\n","import {\n  spawn,\n  subscriber,\n  snapshoter,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  send,\n} from \"@onflow/util-actor\"\nimport {getServices} from \"../services\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\n\nexport const SERVICE_ACTOR_KEYS = {\n  AUTHN: \"authn\",\n  RESULTS: \"results\",\n  SNAPSHOT: \"SNAPSHOT\",\n  UPDATED: \"UPDATED\",\n  UPDATE_RESULTS: \"UPDATE_RESULTS\",\n}\n\nconst warn = (fact, msg) => {\n  if (fact) {\n    console.warn(\n      `\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n}\n\nconst fetchServicesFromDiscovery = async () => {\n  try {\n    const services = await getServices({types: [SERVICE_ACTOR_KEYS.AUTHN]})\n    send(SERVICE_ACTOR_KEYS.AUTHN, SERVICE_ACTOR_KEYS.UPDATE_RESULTS, {\n      results: services,\n    })\n  } catch (error) {\n    log({\n      title: `${error.name} Error fetching Discovery API services.`,\n      message: error.message,\n      level: LEVELS.error,\n    })\n  }\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    warn(\n      typeof window === \"undefined\",\n      '\"fcl.discovery\" is only available in the browser.'\n    )\n    // If you call this before the window is loaded extensions will not be set yet\n    if (document.readyState === 'complete') {\n      fetchServicesFromDiscovery()\n    } else {\n      window.onload = async () => {\n        fetchServicesFromDiscovery()\n      }\n    }\n  },\n  [SERVICE_ACTOR_KEYS.UPDATE_RESULTS]: (ctx, _letter, data) => {\n    ctx.merge(data)\n    ctx.broadcast(SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n  [SERVICE_ACTOR_KEYS.SNAPSHOT]: async (ctx, letter) =>\n    letter.reply({...ctx.all()}),\n}\n\nconst spawnProviders = () => spawn(HANDLERS, SERVICE_ACTOR_KEYS.AUTHN)\n\nconst authn = {\n  subscribe: cb => subscriber(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders, cb),\n  snapshot: () => snapshoter(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders),\n  update: () => fetchServicesFromDiscovery(),\n}\n\nexport default authn\n","import authn from \"./services/authn\"\nexport {getDiscoveryService, makeDiscoveryServices} from \"./utils\"\n\nconst discovery = {\n  authn,\n}\n\nexport {discovery}\n","export function isAndroid() {\n  return (\n    typeof navigator !== \"undefined\" && /android/i.test(navigator.userAgent)\n  )\n}\n\nexport function isSmallIOS() {\n  return (\n    typeof navigator !== \"undefined\" && /iPhone|iPod/.test(navigator.userAgent)\n  )\n}\n\nexport function isLargeIOS() {\n  return typeof navigator !== \"undefined\" && /iPad/.test(navigator.userAgent)\n}\n\nexport function isIOS() {\n  return isSmallIOS() || isLargeIOS()\n}\n\nexport function isMobile() {\n  return isAndroid() || isIOS()\n}\n","import \"../default-config\"\nimport * as t from \"@onflow/types\"\nimport {account, arg} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {normalizeCompositeSignature} from \"../normalizers/service/composite-signature\"\nimport {getDiscoveryService, makeDiscoveryServices} from \"../discovery\"\nimport {serviceRegistry} from \"./exec-service/plugins\"\nimport {isMobile} from \"../utils\"\n\nexport const isFn = d => typeof d === \"function\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst getStoredUser = async storage => {\n  const fallback = JSON.parse(DATA)\n  const stored = await storage.get(NAME)\n  if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n    storage.removeItem(NAME)\n    return fallback\n  }\n  return stored || fallback\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    if (typeof window === \"undefined\") {\n      console.warn(\n        `\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `,\n        \"font-weight:bold;font-family:monospace;\"\n      )\n    }\n\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) {\n      const user = await getStoredUser(storage)\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function getAccountProofData() {\n  let accountProofDataResolver = await config.get(\"fcl.accountProof.resolver\")\n\n  if (!isFn(accountProofDataResolver)) return\n\n  const accountProofData = await accountProofDataResolver()\n\n  if (accountProofData == null) return\n\n  invariant(\n    typeof accountProofData.appIdentifier === \"string\",\n    \"appIdentifier must be a string\"\n  )\n  invariant(\n    /^[0-9a-f]+$/i.test(accountProofData.nonce),\n    \"Nonce must be a hex string\"\n  )\n\n  return accountProofData\n}\n\nconst makeConfig = async ({discoveryAuthnInclude}) => {\n  return {\n    client: {\n      discoveryAuthnInclude,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: serviceRegistry.getStrategies(),\n    },\n  }\n}\n\nasync function authenticate({service, redir = false} = {}) {\n  if (\n    service &&\n    !service?.provider?.is_installed &&\n    service?.provider?.requires_install\n  ) {\n    window.location.href = service?.provider?.install_link\n    return\n  }\n\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const opts = {redir}\n    const user = await snapshot()\n    const discoveryService = await getDiscoveryService(service)\n    const refreshService = serviceOfType(user.services, \"authn-refresh\")\n    let accountProofData\n\n    try {\n      accountProofData = await getAccountProofData()\n    } catch (error) {\n      console.error(\n        `Error During Authentication: Could not resolve account proof data.\n        ${error}`\n      )\n      return reject(error)\n    }\n\n    if (user.loggedIn) {\n      if (refreshService) {\n        try {\n          const response = await execService({\n            service: refreshService,\n            msg: accountProofData,\n            opts,\n          })\n          send(NAME, SET_CURRENT_USER, await buildUser(response))\n        } catch (e) {\n          console.error(\"Error: Could not refresh authentication.\", e)\n        } finally {\n          return resolve(await snapshot())\n        }\n      } else {\n        return resolve(user)\n      }\n    }\n\n    try {\n      const response = await execService({\n        service: discoveryService,\n        msg: accountProofData,\n        config: await makeConfig(discoveryService),\n        opts,\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (e) {\n      console.error(\"Error while authenticating\", e)\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    async resolve(account, preSignable) {\n      const user = await authenticate({redir: true})\n      const authz = serviceOfType(user.services, \"authz\")\n      const preAuthz = serviceOfType(user.services, \"pre-authz\")\n\n      if (preAuthz)\n        return resolvePreAuthz(\n          await execService({\n            service: preAuthz,\n            msg: preSignable,\n          })\n        )\n      if (authz) {\n        let windowRef\n        if (isMobile() && authz.method === \"WC/RPC\") {\n          windowRef = window.open(\"\", \"_blank\")\n        }\n        return {\n          ...account,\n          tempId: \"CURRENT_USER\",\n          resolve: null,\n          addr: sansPrefix(authz.identity.address),\n          keyId: authz.identity.keyId,\n          sequenceNum: null,\n          signature: null,\n          async signingFunction(signable) {\n            return normalizeCompositeSignature(\n              await execService({\n                service: authz,\n                msg: signable,\n                opts: {\n                  includeOlderJsonRpcCall: true,\n                  windowRef,\n                },\n              })\n            )\n          },\n        }\n      }\n      throw new Error(\n        \"No Authz or PreAuthz Service configured for CURRENT_USER\"\n      )\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nasync function resolveArgument() {\n  const {addr} = await authenticate()\n  return arg(withPrefix(addr), t.Address)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate({redir: true})\n\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nlet currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    subscribe,\n    snapshot,\n    resolveArgument,\n  }\n}\n\ncurrentUser.authenticate = authenticate\ncurrentUser.unauthenticate = unauthenticate\ncurrentUser.authorization = authorization\ncurrentUser.signUserMessage = signUserMessage\ncurrentUser.subscribe = subscribe\ncurrentUser.snapshot = snapshot\ncurrentUser.resolveArgument = resolveArgument\n\nexport {currentUser}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preMutate} from \"./utils/pre.js\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {Object} opts.template - Interaction Template for a transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      template: InteractionTemplate | String // InteractionTemplate or url to one\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await preMutate(opts)\n    opts = await prepTemplateOpts(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    txid = sdk.config().overload(opts.dependencies || {}, async () =>\n      // prettier-ignore\n      sdk.send([\n        sdk.transaction(opts.cadence),\n\n        sdk.args(normalizeArgs(opts.args || [])),\n\n        opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n        // opts.proposer > opts.authz > authz\n        sdk.proposer(opts.proposer || opts.authz || authz),\n\n        // opts.payer > opts.authz > authz\n        sdk.payer(opts.payer || opts.authz || authz),\n\n        // opts.authorizations > [opts.authz > authz]\n        sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n      ]).then(sdk.decode)\n    )\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n","export const onMessageFromFCL = (messageType, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type !== messageType) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import {onMessageFromFCL} from \"./on-message-from-fcl\"\n\nexport const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else if (window.opener) {\n    window.opener.postMessage({...msg, type}, \"*\")\n  } else {\n    throw new Error(\"Unable to communicate with parent FCL instance\")\n  }\n}\n\nexport const ready = (cb, msg = {}) => {\n  onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb)\n  sendMsgToFCL(\"FCL:VIEW:READY\")\n}\n\nexport const close = () => {\n  sendMsgToFCL(\"FCL:VIEW:CLOSE\")\n}\n\nexport const approve = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"APPROVED\",\n    reason: null,\n    data: data,\n  })\n}\n\nexport const decline = reason => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"DECLINED\",\n    reason: reason,\n    data: null,\n  })\n}\n\nexport const redirect = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"REDIRECT\",\n    reason: null,\n    data: data,\n  })\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {COMPOSITE_SIGNATURE_PRAGMA} from \"../normalizers/service/__vsn\"\n\nexport function CompositeSignature(addr, keyId, signature) {\n  this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type\n  this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn\n  this.addr = withPrefix(addr)\n  this.keyId = Number(keyId)\n  this.signature = signature\n}\n","import {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer, encode as rlpEncode} from \"@onflow/rlp\"\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, \"0\"), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, \"0\"), \"hex\")\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst nonceBuffer = nonce => Buffer.from(nonce, \"hex\")\n\nexport const encodeAccountProof = (\n  {address, nonce, appIdentifier},\n  includeDomainTag = true\n) => {\n  invariant(\n    address,\n    \"Encode Message For Provable Authn Error: address must be defined\"\n  )\n  invariant(\n    nonce,\n    \"Encode Message For Provable Authn Error: nonce must be defined\"\n  )\n  invariant(\n    appIdentifier,\n    \"Encode Message For Provable Authn Error: appIdentifier must be defined\"\n  )\n\n  invariant(\n    nonce.length >= 64,\n    \"Encode Message For Provable Authn Error: nonce must be minimum of 32 bytes\"\n  )\n\n  const ACCOUNT_PROOF_DOMAIN_TAG = rightPaddedHexBuffer(\n    Buffer.from(\"FCL-ACCOUNT-PROOF-V0.0\").toString(\"hex\"),\n    32\n  )\n\n  if (includeDomainTag) {\n    return Buffer.concat([\n      ACCOUNT_PROOF_DOMAIN_TAG,\n      rlpEncode([\n        appIdentifier,\n        addressBuffer(sansPrefix(address)),\n        nonceBuffer(nonce),\n      ]),\n    ]).toString(\"hex\")\n  }\n\n  return rlpEncode([\n    appIdentifier,\n    addressBuffer(sansPrefix(address)),\n    nonceBuffer(nonce),\n  ]).toString(\"hex\")\n}\n","export function injectExtService(service) {\n  if (service.type === \"authn\" && service.endpoint != null) {\n    if (!Array.isArray(window.fcl_extensions)) {\n      window.fcl_extensions = []\n    }\n    window.fcl_extensions.push(service)\n  } else {\n    console.warn(\"Authn service is required\")\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {log} from \"@onflow/util-logger\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {query} from \"../exec/query\"\nimport {encodeAccountProof} from \"../wallet-utils\"\nimport {isString} from \"../exec/utils/is\"\n\nconst ACCOUNT_PROOF = \"ACCOUNT_PROOF\"\nconst USER_SIGNATURE = \"USER_SIGNATURE\"\n\nexport const validateArgs = args => {\n  if (args.appIdentifier) {\n    const {appIdentifier, address, nonce, signatures} = args\n    invariant(\n      isString(appIdentifier),\n      \"verifyAccountProof({ appIdentifier }) -- appIdentifier must be a string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyAccountProof({ address }) -- address must be a valid address\"\n    )\n    invariant(/^[0-9a-f]+$/i.test(nonce), \"nonce must be a hex string\")\n    invariant(\n      Array.isArray(signatures) &&\n        signatures.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      signatures.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  } else {\n    const {message, address, compSigs} = args\n    invariant(\n      /^[0-9a-f]+$/i.test(message),\n      \"Signed message must be a hex string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyUserSignatures({ address }) -- address must be a valid address\"\n    )\n    invariant(\n      Array.isArray(compSigs) &&\n        compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  }\n}\n\nconst getVerifySignaturesScript = async (sig, opts) => {\n  const verifyFunction =\n    sig === \"ACCOUNT_PROOF\"\n      ? \"verifyAccountProofSignatures\"\n      : \"verifyUserSignatures\"\n\n  let network = await config.get(\"flow.network\")\n  if (!network) {\n    network = await config.get(\"env\")\n    if (network)\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          'Using the \"env\" configuration key for specifying the flow network',\n        message: 'Please use \"flow.network\" instead.',\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0001-deprecate-env-config-key\",\n      })\n  }\n\n  let fclCryptoContract\n\n  invariant(\n    opts.fclCryptoContract || network === \"testnet\" || network === \"mainnet\",\n    \"${verifyFunction}({ fclCryptoContract }) -- config.flow.network must be specified (testnet || mainnet) or contract address provided via opts.fclCryptoContract\"\n  )\n\n  if (opts.fclCryptoContract) {\n    fclCryptoContract = opts.fclCryptoContract\n  } else {\n    fclCryptoContract =\n      network === \"testnet\" ? \"0x74daa6f9c7ef24b1\" : \"0xb4b82a1c9d21d284\"\n  }\n\n  return `\n      import FCLCrypto from ${fclCryptoContract}\n\n      pub fun main(\n          address: Address, \n          message: String, \n          keyIndices: [Int], \n          signatures: [String]\n      ): Bool {\n        return FCLCrypto.${verifyFunction}(address: address, message: message, keyIndices: keyIndices, signatures: signatures)\n      }\n    `\n}\n\n/**\n * Verify a valid account proof signature or signatures for an account on Flow.\n *\n * @param {string} appIdentifier - A message string in hexadecimal format\n * @param {Object} accountProofData - An object consisting of address, nonce, and signatures\n * @param {string} accountProofData.address - A Flow account address\n * @param {string} accountProofData.nonce - A random string in hexadecimal format (minimum 32 bytes in total, i.e 64 hex characters)\n * @param {Object[]} accountProofData.signatures - An array of composite signatures to verify\n * @param {Object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override Flow account address where the FCLCrypto contract is deployed\n * @return {bool}\n *\n * @example\n *\n *  const accountProofData = {\n *   address: \"0x123\",\n *   nonce: \"F0123\"\n *   signatures: [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *  }\n *\n *  const isValid = await fcl.AppUtils.verifyAccountProof(\n *    \"AwesomeAppId\",\n *    accountProofData,\n *    {fclCryptoContract}\n *  )\n */\n\nexport async function verifyAccountProof(\n  appIdentifier,\n  {address, nonce, signatures},\n  opts = {}\n) {\n  validateArgs({appIdentifier, address, nonce, signatures})\n  const message = encodeAccountProof({address, nonce, appIdentifier}, false)\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of signatures) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(ACCOUNT_PROOF, opts),\n    args: (arg, t) => [\n      arg(withPrefix(address), t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @param {string} msg - A message string in hexadecimal format\n * @param {Array} compSigs - An array of Composite Signatures\n * @param {string} compSigs[].addr - The account address\n * @param {number} compSigs[].keyId - The account keyId\n * @param {string} compSigs[].signature - The signature to verify\n * @param {Object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override of Flow account address where the FCLCrypto contract is deployed\n * @return {bool}\n *\n * @example\n *\n *  const isValid = await fcl.AppUtils.verifyUserSignatures(\n *    Buffer.from('FOO').toString(\"hex\"),\n *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *    {fclCryptoContract}\n *  )\n */\nexport async function verifyUserSignatures(message, compSigs, opts = {}) {\n  const address = withPrefix(compSigs[0].addr)\n  validateArgs({message, address, compSigs})\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of compSigs) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(USER_SIGNATURE, opts),\n    args: (arg, t) => [\n      arg(address, t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n","import {log} from \"@onflow/util-logger\"\nimport {verifyUserSignatures as verify} from \"../app-utils\"\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @deprecated since version '1.0.0-alpha.0', use AppUtils.verifyUserSignatures instead\n *\n */\nexport const verifyUserSignatures = log.deprecate({\n  pkg: \"FCL\",\n  subject: \"fcl.verifyUserSignatures()\",\n  message: \"Please use fcl.AppUtils.verifyUserSignatures()\",\n  callback: function verifyUserSignatures(message, compSigs) {\n    return verify(message, compSigs)\n  },\n})\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  ERROR,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.sendSelf(POLL)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    let tx\n    try {\n      tx = await fetchTxStatus(ctx.self())\n    } catch (e) {\n      return ctx.fatalError(e)\n    }\n\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus, error) => {\n          if ((error || txStatus.statusCode) && !suppress) {\n            reject(error || txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {\n  config,\n  block,\n  getEventsAtBlockHeightRange,\n  send,\n  decode,\n} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\nconst HIGH_WATER_MARK = \"hwm\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(HIGH_WATER_MARK)\n    if (hwm == null) {\n      ctx.put(HIGH_WATER_MARK, await block())\n      ctx.put(TICK, await scheduleTick(ctx))\n    } else {\n      let next = await block()\n      ctx.put(HIGH_WATER_MARK, next)\n      if (hwm.height < next.height) {\n        const data = await send([\n          getEventsAtBlockHeightRange(ctx.self(), hwm.height + 1, next.height),\n        ]).then(decode)\n        for (let d of data) ctx.broadcast(UPDATED, d.data)\n      }\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(TICK))\n      ctx.delete(TICK)\n      ctx.delete(HIGH_WATER_MARK)\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,defaultSize=_ref.defaultSize,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],defaultSize:256,padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","import {SHA3} from \"sha3\"\nimport {Buffer} from \"@onflow/rlp\"\n\nexport async function genHash(utf8String) {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(utf8String, \"utf8\"))\n  return sha.digest(\"hex\")\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\nexport async function generateTemplateId({template}) {\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const templateData = template.data\n\n      const messages = await Promise.all(\n        Object.keys(templateData.messages).map(async messageKey => [\n          await genHash(messageKey),\n          await Promise.all(\n            Object.keys(templateData.messages?.[messageKey]?.i18n).map(\n              async i18nkeylanguage => [\n                await genHash(i18nkeylanguage),\n                await genHash(\n                  templateData.messages?.[messageKey]?.i18n?.[i18nkeylanguage]\n                ),\n              ]\n            )\n          ),\n        ])\n      )\n\n      const dependencies = await Promise.all(\n        Object.keys(templateData?.dependencies).map(\n          async dependencyAddressPlaceholder => [\n            await genHash(dependencyAddressPlaceholder),\n            await Promise.all(\n              Object.keys(\n                templateData?.dependencies?.[dependencyAddressPlaceholder]\n              ).map(async dependencyContract => [\n                await genHash(dependencyContract),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.dependencies?.[\n                      dependencyAddressPlaceholder\n                    ]?.[dependencyContract]\n                  ).map(async dependencyContractNetwork => [\n                    await genHash(dependencyContractNetwork),\n                    [\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .contract\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .fq_address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork].pin\n                      ),\n                      await genHash(\n                        String(\n                          templateData?.dependencies?.[\n                            dependencyAddressPlaceholder\n                          ]?.[dependencyContract]?.[dependencyContractNetwork]\n                            .pin_block_height\n                        )\n                      ),\n                    ],\n                  ])\n                ),\n              ])\n            ),\n          ]\n        )\n      )\n\n      const _arguments = await Promise.all(\n        Object.keys(templateData?.[\"arguments\"]).map(async argumentLabel => [\n          await genHash(argumentLabel),\n          [\n            await genHash(\n              String(templateData?.[\"arguments\"]?.[argumentLabel].index)\n            ),\n            await genHash(templateData?.[\"arguments\"]?.[argumentLabel].type),\n            await genHash(\n              templateData?.[\"arguments\"]?.[argumentLabel].balance || \"\"\n            ),\n            await Promise.all(\n              Object.keys(\n                templateData?.[\"arguments\"]?.[argumentLabel].messages\n              ).map(async argumentMessageKey => [\n                await genHash(argumentMessageKey),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                      argumentMessageKey\n                    ].i18n\n                  ).map(async i18nkeylanguage => [\n                    await genHash(i18nkeylanguage),\n                    await genHash(\n                      templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                        argumentMessageKey\n                      ].i18n?.[i18nkeylanguage]\n                    ),\n                  ])\n                ),\n              ])\n            ),\n          ],\n        ])\n      )\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplate\"),\n        await genHash(\"1.0.0\"),\n        await genHash(templateData?.type),\n        await genHash(templateData?.interface),\n        messages,\n        await genHash(templateData?.cadence),\n        dependencies,\n        _arguments,\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\"generateTemplateId Error: Unsupported template version\")\n  }\n}\n","import {config, invariant} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {query} from \"../exec/query.js\"\nimport {generateTemplateId} from \"./generate-template-id.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\nexport async function getInteractionTemplateAudits(\n  {template, auditors},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"getInteractionTemplateAudits({ template }) -- template must be defined\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"getInteractionTemplateAudits({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  // Recompute ID to be sure it matches\n  let recomputedTemplateID = await generateTemplateId({template})\n\n  if (recomputedTemplateID !== template.id) {\n    log({\n      title: \"getInteractionTemplateAudits Debug Error\",\n      message: `Could not recompute and match template ID\n                computed: ${recomputedTemplateID}\n                template: ${template.id}\n            `,\n      level: LEVELS.debug,\n    })\n    throw new Error(\n      \"getInteractionTemplateAudits Error: Could not recompute and match template ID\"\n    )\n  }\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const _auditors = auditors || (await config().get(\"flow.auditors\"))\n\n      invariant(\n        _auditors,\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not set\"\n      )\n      invariant(\n        Array.isArray(_auditors),\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not an array\"\n      )\n\n      let FlowInteractionAuditContract = opts.flowInteractionAuditContract\n      if (!FlowInteractionAuditContract) {\n        const fclNetwork = await config().get(\"flow.network\")\n        invariant(\n          fclNetwork === \"mainnet\" || fclNetwork === \"testnet\",\n          \"getInteractionTemplateAudits Error: Unable to determine address for FlowInteractionTemplateAudit contract. Set configuration for 'fcl.network' to 'mainnet' or 'testnet'\"\n        )\n        if (fclNetwork === \"mainnet\") {\n          FlowInteractionAuditContract = \"0xfd100e39d50a13e6\"\n        } else {\n          FlowInteractionAuditContract = \"0xf78bfc12d0a786dc\"\n        }\n      }\n\n      const audits = await query({\n        cadence: `\n        import FlowInteractionTemplateAudit from ${FlowInteractionAuditContract}\n        pub fun main(templateId: String, auditors: [Address]): {Address:Bool} {\n          return FlowInteractionTemplateAudit.getHasTemplateBeenAuditedByAuditors(templateId: templateId, auditors: auditors)\n        }\n        `,\n        args: (arg, t) => [\n          arg(recomputedTemplateID, t.String),\n          arg(_auditors, t.Array(t.Address)),\n        ],\n      })\n\n      return audits\n\n    default:\n      throw new Error(\n        \"getInteractionTemplateAudits Error: Unsupported template version\"\n      )\n  }\n}\n","export function generateImport({contractName, address}) {\n  return {contractName, address, contract: \"\"}\n}\n","import {generateImport} from \"./generate-import.js\"\n\nexport function findImports(cadence) {\n  let imports = []\n\n  let importsReg = /import ((\\w|,| )+)* from 0x\\w+/g\n  let fileImports = cadence.match(importsReg) || []\n\n  for (const fileImport of fileImports) {\n    const importLineReg = /import ((\\w+|, |)*) from (0x\\w+)/g\n    const importLine = importLineReg.exec(fileImport)\n\n    const contractsReg = /((?:\\w+)+),?/g\n    const contracts = importLine[1].match(contractsReg) || []\n\n    for (const contract of contracts) {\n      imports.push(\n        generateImport({\n          address: importLine[3],\n          contractName: contract.replace(/,/g, \"\"),\n        })\n      )\n    }\n  }\n\n  return imports\n}\n","import {\n  invariant,\n  block,\n  send,\n  getAccount,\n  atBlockHeight,\n  config,\n  decode,\n} from \"@onflow/sdk\"\nimport {genHash} from \"./utils/hash.js\"\nimport {findImports} from \"./utils/find-imports.js\"\nimport {generateImport} from \"./utils/generate-import.js\"\n\nexport async function generateDependencyPin(\n  {address, contractName, blockHeight},\n  opts = {}\n) {\n  invariant(\n    address != undefined,\n    \"generateDependencyPin({ address }) -- address must be defined\"\n  )\n  invariant(\n    contractName != undefined,\n    \"generateDependencyPin({ contractName }) -- contractName must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be defined\"\n  )\n  invariant(\n    typeof address === \"string\",\n    \"generateDependencyPin({ address }) -- address must be a string\"\n  )\n  invariant(\n    typeof contractName === \"string\",\n    \"generateDependencyPin({ contractName }) -- contractName must be a string\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be a number\"\n  )\n\n  let horizon = [generateImport({contractName, address})]\n\n  for (const horizonImport of horizon) {\n    let account = await send(\n      [\n        getAccount(\n          await config().get(horizonImport.address, horizonImport.address)\n        ),\n        atBlockHeight(blockHeight),\n      ],\n      opts\n    ).then(decode)\n\n    horizonImport.contract = account.contracts?.[horizonImport.contractName]\n\n    if (!horizonImport.contract) {\n      console.error(\"Did not find expected contract\", horizonImport, account)\n      throw new Error(\"Did not find expected contract\")\n    }\n\n    let contractImports = findImports(horizonImport.contract)\n\n    horizon.push(...contractImports)\n  }\n\n  let contractHashes = horizon.map(iport => genHash(iport.contract))\n\n  let contractHashesJoined = contractHashes.join(\"\")\n\n  return genHash(contractHashesJoined)\n}\n\nexport async function generateDependencyPinAtLatestSealedBlock(\n  {address, contractName},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true}, opts)\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return generateDependencyPin(\n    {address, contractName, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","export function normalizeInteractionTemplateInterface(templateInterface) {\n  if (templateInterface == null) return null\n\n  switch (templateInterface[\"f_version\"]) {\n    case \"1.0.0\":\n      return templateInterface\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplateInterface Error: Invalid InteractionTemplateInterface\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplateInterface} from \"../normalizers/interaction-template/interaction-template-interface.js\"\n\nexport async function generateTemplateInterfaceId({templateInterface}) {\n  invariant(\n    templateInterface != undefined,\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be defined\"\n  )\n  invariant(\n    typeof templateInterface === \"object\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be an object\"\n  )\n  invariant(\n    typeof templateInterface.f_type === \"InteractionTemplateInterface\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface object must be an InteractionTemplate\"\n  )\n\n  templateInterface = normalizeInteractionTemplateInterface(templateInterface)\n\n  switch (templateInterface.f_version) {\n    case \"1.0.0\":\n      const interfaceData = templateInterface.data\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplateInterface\"),\n        await genHash(\"1.0.0\"),\n        await genHash(interfaceData.flip),\n        await Promise.all(\n          Object.keys(interfaceData.arguments).map(async argumentLabel => [\n            await genHash(argumentLabel),\n            await genHash(String(interfaceData.arguments[argumentLabel].index)),\n            await genHash(interfaceData.arguments[argumentLabel].type),\n          ])\n        ),\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\n        \"generateTemplateInterfaceId Error: Unsupported templateInterface version\"\n      )\n  }\n}\n","import {generateDependencyPin} from \"./generate-dependency-pin.js\"\nimport {invariant, block} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\nexport async function verifyDependencyPinsSame(\n  {template, blockHeight, network},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    network != undefined,\n    \"generateDependencyPin({ network }) network must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) blockHeight must be defined\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) blockHeight must be a number\"\n  )\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let templateDependenciesPlaceholderKeys = Object.keys(\n        template.data.dependencies\n      )\n\n      for (let templateDependencyPlaceholderKey of templateDependenciesPlaceholderKeys) {\n        let templateDependencyPlaceholder =\n          template.data.dependencies[templateDependencyPlaceholderKey]\n\n        let templateDependencyPlaceholderContractNames = Object.keys(\n          templateDependencyPlaceholder\n        )\n\n        for (let templateDependencyPlaceholderContractName of templateDependencyPlaceholderContractNames) {\n          let templateDependencyPlaceholderContractNetworks =\n            template.data.dependencies[templateDependencyPlaceholderKey][\n              templateDependencyPlaceholderContractName\n            ]\n\n          let templateDependency =\n            templateDependencyPlaceholderContractNetworks[network]\n          if (typeof templateDependency === \"undefined\") continue\n\n          let pin = await generateDependencyPin(\n            {\n              address: templateDependency.address,\n              contractName: templateDependency.contract,\n              blockHeight,\n            },\n            opts\n          )\n\n          if (pin !== templateDependency.pin) {\n            log({\n              title: \"verifyDependencyPinsSame Debug Error\",\n              message: `Could not recompute and match dependency pin.\n                                address: ${templateDependency.address} | contract: ${templateDependency.contract}\n                                computed: ${pin}\n                                template: ${templateDependency.pin}\n                            `,\n              level: LEVELS.debug,\n            })\n            return false\n          }\n        }\n      }\n\n      return true\n\n    default:\n      throw new Error(\n        \"verifyDependencyPinsSame Error: Unsupported template version\"\n      )\n  }\n}\n\nexport async function verifyDependencyPinsSameAtLatestSealedBlock(\n  {template, network},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true})\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return verifyDependencyPinsSame(\n    {template, network, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","import {invariant} from \"@onflow/sdk\"\n\nexport function getTemplateMessage({\n  localization = \"en-US\",\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"stirng\",\n    \"getMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"stirng\",\n    \"getMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const messages = template?.data?.messages\n\n  return messages?.[messageKey]?.i18n?.[localization]\n}\n","import {invariant} from \"@onflow/sdk\"\n\nexport function getTemplateArgumentMessage({\n  localization = \"en-US\",\n  argumentLabel,\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"stirng\",\n    \"getMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    argumentLabel,\n    \"getMessage({ argumentLabel }) -- argumentLabel must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"stirng\",\n    \"getMessage({ argumentLabel }) -- argumentLabel must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"stirng\",\n    \"getMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const args = template?.data?.arguments\n\n  return args?.[argumentLabel]?.messages?.[messageKey]?.i18n?.[localization]\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {verifyUserSignatures} from \"./exec/verify\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\nexport {pluginRegistry} from \"./current-user/exec-service/plugins\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nimport {discovery} from \"./discovery\"\nexport {discovery}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nimport * as AppUtils from \"./app-utils\"\nexport {AppUtils}\n\nimport * as InteractionTemplateUtils from \"./interaction-template-utils\"\nexport {InteractionTemplateUtils}\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/config\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {block} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\nexport {voucherIntercept} from \"@onflow/sdk\"\nexport {voucherToTxId} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n"],"names":["isServerSide","window","SESSION_STORAGE","can","get","key","JSON","parse","sessionStorage","getItem","put","value","setItem","stringify","config","configLens","regex","Object","where","entries","map","replace","fromEntries","VERSION","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","httpDocumentResolver","url","invariant","fetchTransport","res","Error","ok","json","document","DOCUMENT_RESOLVERS","Map","retrieve","documentResolversFromConfig","keys","resolverFromConfig","resolverProtocol","set","urlParts","exec","protocol","resolver","normalizeInteractionTemplate","template","deriveCadenceByNetwork","network","undefined","f_type","f_version","networkDependencies","data","dependencies","dependencyPlaceholder","dependencyNetworkContracts","values","length","dependencyContract","dependencyContractForNetwork","address","reduce","cadence","placeholder","RegExp","deriveDependencies","derivedDependencies","dependencyPlaceholderKeys","dependencyPlaceholderKey","dependencyPlaceholderContractsKeys","dependencyPlaceholderContract","dependency","withPrefix","prepTemplateOpts","opts","pre","preMutate","preQuery","query","overload","send","script","args","limit","then","decode","fetchServices","servicesURL","code","URL","searchParams","append","fetch","method","headers","resp","Array","isArray","services","authorizations","service","push","keyId","provider","id","mergeServices","sx1","sx2","SERVICE_PRAGMA","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeAuthn","uid","endpoint","authn","pid","addr","name","icon","normalizeAuthz","identity","params","normalizePreAuthz","normalizeFrame","old","normalizeBackChannelRpc","normalizeOpenId","normalizeUserSignature","normalizeLocalView","normalizeAccountProof","normalizeAuthnRefresh","serviceNormalizers","authz","frame","normalizeService","normalized","error","console","deriveCompositeId","rlp","encode","toString","normalizeData","paddr","findService","find","buildUser","hks","cid","loggedIn","expiresAt","expires","serviceOfType","serviceEndpoint","location","origin","fetchService","body","normalizePollingResponse","status","reason","compositeSignature","updates","authorizationUpdates","local","OPTIONS","serviceMethod","poll","canContinue","Promise","r","setTimeout","FRAME","FRAME_STYLES","renderFrame","src","getElementById","$frame","createElement","allow","frameBorder","style","cssText","unmount","remove","contentWindow","POP","popup","previousUrl","popupWindow","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","renderPop","closed","focus","close","tab","renderTab","VIEWS","execLocal","execHttpPost","fclVersion","serviceResponse","CLOSE_EVENT","READY_EVENT","RESPONSE_EVENT","_","e","toLowerCase","IGNORE","Set","deprecate","was","want","warn","buildMessageHandler","onReady","onResponse","onMessage","has","noop","onClose","handler","addEventListener","removeEventListener","msg","postMessage","execIframeRPC","resolve","reject","includeOlderJsonRpcCall","deprecated","message","jsonrpc","result","pop","$pop","timer","setInterval","clearInterval","execPopRPC","redir","$tab","execTabRPC","extension","execExtRPC","CORE_STRATEGIES","supportedPlugins","supportedServicePlugins","validateDiscoveryPlugin","servicePlugin","serviceStrategy","ds","discoveryServices","ServiceRegistry","strategies","add","includes","setServices","log","title","level","LEVELS","getServices","getStrategy","getStrategies","freeze","validatePlugins","plugins","pluginsArray","p","PluginRegistry","pluginsMap","getPlugins","serviceRegistry","pluginRegistry","execStrategy","strategy","execService","client","fclLibrary","hostname","execConfig","app","normalizeCompositeSignature","sansPrefix","signature","sig","makeDiscoveryServices","extensionServices","fcl_extensions","getDiscoveryService","discoveryAuthnInclude","first","discoveryWalletMethod","types","Boolean","include","navigator","userAgent","clientServices","supportedStrategies","SERVICE_ACTOR_KEYS","AUTHN","RESULTS","SNAPSHOT","UPDATED","UPDATE_RESULTS","fact","fetchServicesFromDiscovery","results","HANDLERS","INIT","ctx","readyState","onload","_letter","merge","broadcast","all","SUBSCRIBE","letter","subscribe","from","UNSUBSCRIBE","unsubscribe","_HANDLERS","reply","spawnProviders","spawn","cb","subscriber","snapshot","snapshoter","update","discovery","isAndroid","test","isSmallIOS","isLargeIOS","isIOS","isMobile","isFn","NAME","SET_CURRENT_USER","DEL_CURRENT_USER","DATA","getStoredUser","storage","fallback","stored","removeItem","user","notExpired","spawnCurrentUser","Date","now","getAccountProofData","accountProofDataResolver","accountProofData","appIdentifier","nonce","makeConfig","authenticate","is_installed","requires_install","href","install_link","discoveryService","refreshService","response","unauthenticate","normalizePreAuthzResponse","proposer","payer","authorization","resolvePreAuthz","axs","az","role","tempId","join","signingFunction","signable","authorizer","account","preSignable","preAuthz","windowRef","sequenceNum","callback","EXIT","self","receive","tag","expectReply","timeout","resolveArgument","Address","makeSignable","signUserMessage","signingService","compSigs","currentUser","mutate","txid","transaction","onMessageFromFCL","messageType","buildData","interaction","internal","sendMsgToFCL","parent","opener","ready","approve","decline","redirect","CompositeSignature","Number","rightPaddedHexBuffer","pad","Buffer","padEnd","leftPaddedHexBuffer","padStart","addressBuffer","nonceBuffer","encodeAccountProof","includeDomainTag","ACCOUNT_PROOF_DOMAIN_TAG","concat","rlpEncode","injectExtService","ACCOUNT_PROOF","USER_SIGNATURE","validateArgs","signatures","every","i","arr","cs","getVerifySignaturesScript","verifyFunction","pkg","subject","transition","fclCryptoContract","verifyAccountProof","signaturesArr","keyIndices","el","String","Int","verifyUserSignatures","verify","serialize","defaultResolve","resolveFunction","pipe","createSignableVoucher","RATE","POLL","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isExpired","tx","isSealed","isExecuted","isFinalized","isPending","isUnknown","isDiff","cur","next","sendSelf","fatalError","scoped","spawnTransaction","once","predicate","innerOnce","suppress","unsub","txStatus","statusCode","errorMessage","onceFinalized","onceExecuted","onceSealed","TICK","HIGH_WATER_MARK","scheduleTick","hasSubs","hwm","block","height","getEventsAtBlockHeightRange","clearTimeout","spawnEvents","events","copy","I","O","o","oi","ii","copy_1","defineProperty","exports","_copy","_interopRequireDefault","require$$0","obj","__esModule","chi","_ref","A","C","_x","xy","x1","x2","_default","ROUND_CONSTANTS","Uint32Array","_roundConstants","iota","roundIndex","PI_SHUFFLES","RHO_OFFSETS","_piShuffles","_rhoOffsets","require$$1","require$$2","rhoPi","W","H","L","Wi","ri","j","theta","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","permute","fill","_buffer","_permute","xorWords","readWords","Sponge","_this","capacity","padding","keccak","stateSize","blockSize","queueSize","queueOffset","state","queue","allocUnsafe","absorb","buffer","squeeze","options","arguments","output","offset","slice","reset","SHAKE","SHA3Hash","SHA3","Keccak","_sponge","createHash","allowedSizes","defaultSize","Hash","size","constructor","sponge","input","encoding","isBuffer","TypeError","digest","formatOrOptions","format","genHash","utf8String","sha","generateTemplateId","templateData","messages","messageKey","i18n","i18nkeylanguage","dependencyAddressPlaceholder","dependencyContractNetwork","contract","fq_address","pin","pin_block_height","argumentLabel","index","balance","argumentMessageKey","_arguments","encodedHex","getInteractionTemplateAudits","auditors","recomputedTemplateID","debug","_auditors","FlowInteractionAuditContract","flowInteractionAuditContract","fclNetwork","audits","generateImport","contractName","findImports","imports","importsReg","fileImports","match","fileImport","importLineReg","importLine","contractsReg","contracts","generateDependencyPin","blockHeight","horizon","horizonImport","getAccount","atBlockHeight","contractImports","contractHashes","iport","contractHashesJoined","generateDependencyPinAtLatestSealedBlock","sealed","latestSealedBlock","latestSealedBlockHeight","normalizeInteractionTemplateInterface","templateInterface","generateTemplateInterfaceId","interfaceData","flip","verifyDependencyPinsSame","templateDependenciesPlaceholderKeys","templateDependencyPlaceholderKey","templateDependencyPlaceholder","templateDependencyPlaceholderContractNames","templateDependencyPlaceholderContractName","templateDependencyPlaceholderContractNetworks","templateDependency","verifyDependencyPinsSameAtLatestSealedBlock","getTemplateMessage","localization","getTemplateArgumentMessage","reauthenticate","signUp","logIn"],"mappings":"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"}